{"version":3,"file":"static/js/68.4ea0f9a9.chunk.js","mappings":"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","sources":["modules/core/components/customInput/styled.ts","modules/core/components/customInput/CustomInput.tsx","modules/core/components/notification/styled.ts","modules/core/components/notification/Notification.tsx","modules/core/components/notification/controller.ts","modules/core/store/allActions.ts","modules/core/hooks/useActions.ts","modules/login/layout/components/loginForm/styled.ts","modules/login/layout/components/loginForm/LoginForm.tsx","modules/login/layout/components/loginForm/controller.ts","modules/login/layout/loginLayout/styled.ts","modules/login/layout/loginLayout/LoginLayout.tsx","modules/login/Login.tsx"],"sourcesContent":["import styled, {css} from \"styled-components\";\r\n\r\nexport const StiledCustomInput = styled.input<{isError?: boolean}>`\r\n  padding: .9rem 1.2rem;\r\n  background-color: ${props => props.theme.background.darkBlue};\r\n  border-radius: .8rem;\r\n  ${props => props.isError && css`\r\n   border: .1rem solid red;\r\n  `}\r\n`\r\n","import React, {InputHTMLAttributes} from 'react';\r\nimport {StiledCustomInput} from \"./styled\";\r\nimport InputMask from \"react-input-mask\";\r\n\r\ntype Props = {\r\n    mask?: string,\r\n    isError?: boolean\r\n} & InputHTMLAttributes<HTMLInputElement>\r\n\r\n\r\nconst CustomInput = ({mask, ...props}: Props) => {\r\n    return (\r\n        mask ?\r\n            <InputMask mask={mask} {...props} maskPlaceholder={''}>\r\n                <StiledCustomInput {...props}/>\r\n            </InputMask> :\r\n            <StiledCustomInput {...props}/>\r\n    );\r\n};\r\n\r\nexport default CustomInput;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledNotification = styled.div`\r\n  position: fixed;\r\n  top: 1rem;\r\n  right: 1rem;\r\n  padding: 1rem;\r\n  background-color: ${props => props.theme.background.red};\r\n  border-radius: .8rem;\r\n`\r\n","import React, {ReactNode} from 'react';\r\nimport {StyledNotification} from \"./styled\";\r\nimport {useController} from \"./controller\";\r\nimport {createPortal} from \"react-dom\";\r\n\r\ntype Props = {\r\n    isShow: boolean,\r\n    onClose: () => void\r\n    children?: ReactNode,\r\n}\r\nconst Notification = (props: Props) => {\r\n    const {nodeElement} = useController(props.onClose)\r\n    return props.isShow ? createPortal(\r\n        <StyledNotification {...props}>\r\n        </StyledNotification>,\r\n        nodeElement\r\n    ) : null\r\n};\r\n\r\nexport default Notification;\r\n","import {useEffect, useMemo, useState} from \"react\";\r\n\r\nexport const useController = (onClose: () => void) => {\r\n    const [idTimeout, setIdTimeout] = useState<NodeJS.Timeout | null>(null)\r\n    const nodeElement = useMemo(() => document.createElement('div',), [])\r\n    useEffect(() => {\r\n        const notificationRootElement = document.querySelector('#notification')\r\n        notificationRootElement?.appendChild(nodeElement)\r\n        if (idTimeout) clearTimeout(idTimeout)\r\n        setIdTimeout(setTimeout(() => {\r\n            onClose()\r\n        }, 3000))\r\n        return () => {\r\n            notificationRootElement?.removeChild(nodeElement)\r\n        }\r\n    }, [nodeElement, onClose])\r\n    return {nodeElement}\r\n}\r\n","import {chatActions} from \"../../chat/store\";\r\nimport {generalActions} from \"./reducers/general\";\r\n\r\n\r\nconst allActions = {\r\n    ...chatActions,\r\n    ...generalActions\r\n};\r\nexport default allActions;\r\n\r\n","import {useDispatch} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport allActionsCreators from '../store/allActions';\r\n\r\nexport const useAction = () => {\r\n  const dispatch = useDispatch();\r\n  return bindActionCreators(allActionsCreators, dispatch);\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nconst Form = styled.form`\r\n  display: grid;\r\n  gap: 1rem\r\n`\r\nconst Button = styled.button`\r\n  background: ${props => props.theme.button.primary};\r\n  color: ${props => props.theme.colors.primary};\r\n  padding: .9rem 1.2rem;\r\n  border-radius: .8rem;\r\n  transition: background-color .15s ease-in;\r\n  &:hover {\r\n    background: ${props => props.theme.button.primaryHover};\r\n  }\r\n  &:disabled{\r\n    background: ${props => props.theme.button.disabled};\r\n    cursor: not-allowed;\r\n  }\r\n`\r\nconst Body = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 1rem\r\n`\r\nconst Title = styled.h1`\r\n\r\n`\r\nconst Footer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\nexport const StyledLoginForm = {\r\n    Body,\r\n    Form,\r\n    Title,\r\n    Footer,\r\n    Button\r\n}\r\n","import React from 'react';\r\nimport {StyledLoginForm} from \"./styled\";\r\nimport CustomInput from \"../../../../core/components/customInput/CustomInput\";\r\nimport {useController} from \"./controller\";\r\nimport Notification from \"../../../../core/components/notification/Notification\";\r\n\r\nconst LoginForm = () => {\r\n    const {\r\n        idInstance,\r\n        isLoginError,\r\n        apiTokenInstance,\r\n        isDisabledSubmitButton,\r\n        closeNotification,\r\n        setIdInstanceHandler,\r\n        submitLoginFormHandler,\r\n        setApiTokenInstanceHandler,\r\n    } = useController()\r\n    return (\r\n        <StyledLoginForm.Form onSubmit={submitLoginFormHandler}>\r\n            <Notification isShow={isLoginError} onClose={closeNotification}>Ошибка авторизации</Notification>\r\n            <StyledLoginForm.Title>\r\n                Авторизация\r\n            </StyledLoginForm.Title>\r\n            <StyledLoginForm.Body>\r\n                <CustomInput placeholder='Id Instance' value={idInstance} onChange={setIdInstanceHandler}/>\r\n                <CustomInput placeholder='Api TokenInstance' value={apiTokenInstance}\r\n                             onChange={setApiTokenInstanceHandler}/>\r\n            </StyledLoginForm.Body>\r\n            <StyledLoginForm.Footer>\r\n                <StyledLoginForm.Button type='submit' disabled={isDisabledSubmitButton}>\r\n                    Отправить\r\n                </StyledLoginForm.Button>\r\n            </StyledLoginForm.Footer>\r\n        </StyledLoginForm.Form>\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n","import {FormEvent, useMemo, useState} from \"react\";\r\nimport {useAction} from \"../../../../core/hooks/useActions\";\r\nimport {useTypeSelector} from \"../../../../core/hooks/useTypeSelector\";\r\n\r\nexport const useController = () => {\r\n    const {fetchLogin, setIsLoginError} = useAction()\r\n    const {isLoginError} = useTypeSelector(state => state.general)\r\n    const [apiTokenInstance, setApiTokenInstance] = useState('')\r\n    const [idInstance, setIdInstance] = useState('')\r\n    const isDisabledSubmitButton = useMemo(() => {\r\n        return !(apiTokenInstance.length && idInstance.length)\r\n    }, [apiTokenInstance.length, idInstance.length])\r\n    const submitLoginFormHandler = async (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault()\r\n        fetchLogin({idInstance, apiTokenInstance})\r\n        setIdInstance('')\r\n        setApiTokenInstance('')\r\n    }\r\n    const setApiTokenInstanceHandler = (e: FormEvent<HTMLInputElement>) => {\r\n        setApiTokenInstance(e.currentTarget.value)\r\n\r\n    }\r\n    const setIdInstanceHandler = (e: FormEvent<HTMLInputElement>) => {\r\n        setIdInstance(e.currentTarget.value)\r\n    }\r\n    const closeNotification = () => {\r\n        setIsLoginError(false)\r\n    }\r\n    return {\r\n        idInstance,\r\n        isLoginError,\r\n        apiTokenInstance,\r\n        isDisabledSubmitButton,\r\n        closeNotification,\r\n        setIdInstanceHandler,\r\n        submitLoginFormHandler,\r\n        setApiTokenInstanceHandler,\r\n    }\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledLoginLayout = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n`\r\n","import React from 'react';\r\nimport LoginForm from \"../components/loginForm/LoginForm\";\r\nimport {StyledLoginLayout} from \"./styled\";\r\n\r\nconst LoginLayout = () => {\r\n    return (\r\n        <StyledLoginLayout>\r\n            <LoginForm/>\r\n        </StyledLoginLayout>\r\n    );\r\n};\r\n\r\nexport default LoginLayout;\r\n","import React from 'react';\r\nimport LoginLayout from \"./layout/loginLayout/LoginLayout\";\r\n\r\nconst Login = () => {\r\n    return (\r\n        <LoginLayout/>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["StiledCustomInput","styled","_templateObject","_taggedTemplateLiteral","props","theme","background","darkBlue","isError","css","_templateObject2","_ref","mask","_objectWithoutProperties","_excluded","_jsx","InputMask","_objectSpread","maskPlaceholder","children","StyledNotification","red","_useController","onClose","_useState","useState","_useState2","_slicedToArray","idTimeout","setIdTimeout","nodeElement","useMemo","document","createElement","useEffect","notificationRootElement","querySelector","appendChild","clearTimeout","setTimeout","removeChild","useController","isShow","createPortal","chatActions","generalActions","useAction","dispatch","useDispatch","bindActionCreators","allActionsCreators","Form","Button","button","primary","colors","primaryHover","disabled","StyledLoginForm","Body","_templateObject3","Title","_templateObject4","Footer","_templateObject5","_useAction","fetchLogin","setIsLoginError","isLoginError","useTypeSelector","state","general","apiTokenInstance","setApiTokenInstance","_useState3","_useState4","idInstance","setIdInstance","isDisabledSubmitButton","length","submitLoginFormHandler","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","wrap","_context","prev","next","preventDefault","stop","_x","apply","arguments","closeNotification","setIdInstanceHandler","currentTarget","value","setApiTokenInstanceHandler","_jsxs","onSubmit","Notification","CustomInput","placeholder","onChange","type","StyledLoginLayout","LoginForm","LoginLayout"],"sourceRoot":""}